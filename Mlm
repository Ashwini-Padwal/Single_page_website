Perfect! Here is a step-by-step guide to build your MLM Chain Marketing Project in Core PHP with full logic including:

User registration with referral

10-level genealogy

Daily income (₹7.5 × 100 days)

Level bonus

Fast track bonus

User deactivation after 100 days

Admin dashboard (basic)



---

✅ STEP 1: Database Schema

-- users table
CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_code VARCHAR(10) UNIQUE,
  name VARCHAR(100),
  email VARCHAR(100),
  mobile VARCHAR(15),
  password VARCHAR(255),
  sponsor_id INT,
  activation_date DATE,
  is_active TINYINT(1) DEFAULT 1,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- user_tree table
CREATE TABLE user_tree (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT,
  parent_id INT,
  level INT
);

-- income table
CREATE TABLE incomes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT,
  source_user_id INT,
  income_type ENUM('referral', 'daily', 'level_bonus', 'fast_track'),
  amount DECIMAL(10,2),
  level INT,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);


---

✅ STEP 2: Folder Structure

mlm-core-php/
├── config/
│   └── db.php
├── controllers/
│   ├── UserController.php
│   └── IncomeController.php
├── models/
│   ├── User.php
│   └── Income.php
├── views/
│   ├── register.php
│   ├── dashboard.php
│   └── admin.php
├── cron/
│   ├── daily_income.php
│   ├── fast_track_bonus.php
│   └── deactivate_users.php
└── public/
    └── index.php


---

✅ STEP 3: DB Connection (config/db.php)

<?php
$pdo = new PDO("mysql:host=localhost;dbname=mlm", "root", "");
$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
?>


---

✅ STEP 4: Register User with Referral (UserController.php)

require_once '../config/db.php';

function registerUser($data) {
    global $pdo;

    $stmt = $pdo->prepare("SELECT id FROM users WHERE user_code = ?");
    $stmt->execute([$data['referral_code']]);
    $sponsor = $stmt->fetch();

    if (!$sponsor) {
        die("Invalid referral code.");
    }

    $user_code = uniqid('U');
    $activation_date = date('Y-m-d');

    $stmt = $pdo->prepare("INSERT INTO users (user_code, name, email, mobile, password, sponsor_id, activation_date) VALUES (?, ?, ?, ?, ?, ?, ?)");
    $stmt->execute([
        $user_code,
        $data['name'],
        $data['email'],
        $data['mobile'],
        password_hash($data['password'], PASSWORD_DEFAULT),
        $sponsor['id'],
        $activation_date
    ]);

    $newUserId = $pdo->lastInsertId();
    addToTree($newUserId, $sponsor['id']);
    giveReferralBonus($sponsor['id'], $newUserId);
}


---

✅ STEP 5: Add to Genealogy Tree (10 levels)

function addToTree($user_id, $sponsor_id) {
    global $pdo;

    $current_id = $sponsor_id;
    for ($level = 1; $level <= 10; $level++) {
        if (!$current_id) break;
        $stmt = $pdo->prepare("INSERT INTO user_tree (user_id, parent_id, level) VALUES (?, ?, ?)");
        $stmt->execute([$user_id, $current_id, $level]);

        $stmt2 = $pdo->prepare("SELECT sponsor_id FROM users WHERE id = ?");
        $stmt2->execute([$current_id]);
        $row = $stmt2->fetch();
        $current_id = $row ? $row['sponsor_id'] : null;
    }
}


---

✅ STEP 6: Referral Bonus Logic

function giveReferralBonus($sponsor_id, $new_user_id) {
    global $pdo;
    $amount = 150;
    $stmt = $pdo->prepare("INSERT INTO incomes (user_id, source_user_id, income_type, amount, level) VALUES (?, ?, 'referral', ?, 1)");
    $stmt->execute([$sponsor_id, $new_user_id, $amount]);
}


---

✅ STEP 7: Daily Cron - Daily Income (cron/daily_income.php)

require_once '../config/db.php';

$stmt = $pdo->query("SELECT * FROM users WHERE is_active = 1");
while ($user = $stmt->fetch()) {
    $days = (new DateTime())->diff(new DateTime($user['activation_date']))->days;
    if ($days <= 100) {
        $stmt2 = $pdo->prepare("INSERT INTO incomes (user_id, income_type, amount) VALUES (?, 'daily', 7.5)");
        $stmt2->execute([$user['id']]);
    }
}


---

✅ STEP 8: Fast Track Bonus (check 1 direct at each level)

require_once '../config/db.php';

$stmt = $pdo->query("SELECT * FROM users WHERE is_active = 1");
while ($user = $stmt->fetch()) {
    for ($i = 1; $i <= 10; $i++) {
        $stmt2 = $pdo->prepare("SELECT parent_id FROM user_tree WHERE user_id = ? AND level = ?");
        $stmt2->execute([$user['id'], $i]);
        $parent = $stmt2->fetchColumn();

        if ($parent) {
            $stmt3 = $pdo->prepare("SELECT COUNT(*) FROM users WHERE sponsor_id = ? AND is_active = 1");
            $stmt3->execute([$parent]);
            if ($stmt3->fetchColumn() >= 1) {
                $rate = $i == 1 ? 2.5 : ($i <= 5 ? 0.5 : 0.15);
                $stmt4 = $pdo->prepare("INSERT INTO incomes (user_id, source_user_id, income_type, amount, level) VALUES (?, ?, 'fast_track', ?, ?)");
                $stmt4->execute([$parent, $user['id'], $rate, $i]);
            }
        }
    }
}


---

✅ STEP 9: Auto Deactivate After 100 Days (cron/deactivate_users.php)

require_once '../config/db.php';

$stmt = $pdo->prepare("UPDATE users SET is_active = 0 WHERE DATE_ADD(activation_date, INTERVAL 100 DAY) <= CURDATE()");
$stmt->execute();


---

✅ STEP 10: Admin View (Basic admin.php)

require_once '../config/db.php';

$stmt = $pdo->query("SELECT u.user_code, u.name, u.is_active, SUM(i.amount) as total_income
                     FROM users u
                     LEFT JOIN incomes i ON u.id = i.user_id
                     GROUP BY u.id");

while ($row = $stmt->fetch()) {
    echo "{$row['user_code']} - {$row['name']} - Active: {$row['is_active']} - ₹{$row['total_income']}<br>";
}


---

Would you like me to now prepare this full Core PHP project as a downloadable ZIP with working file structure?

